{"version":3,"sources":["lib/redux/slices/stockSlice.ts","lib/constants/colors.ts","components/setupBar/useStyles.ts","components/setupBar/index.tsx","lib/constants/types.ts","components/noteTray/useStyles.ts","assets/metronome.wav","components/noteTray/notesMemoized/useStyles.ts","components/noteTray/notesMemoized/index.tsx","components/noteTray/index.tsx","hooks/useInterval.ts","components/controlBar/useStyles.ts","components/controlBar/index.tsx","App.tsx","lib/redux/rootReducer.ts","lib/redux/store.ts","serviceWorker.ts","theme.ts","index.tsx"],"names":["stockSlice","createSlice","name","initialState","list","bpm","minutes","metronome","reducers","add","state","action","note","payload","indexOf","push","remove","index","splice","setBPM","setMinutes","setMetronome","actions","selectAllNotesSlice","notes","darkBlue","useStyles","makeStyles","theme","sidebar","transition","padding","spacing","backgroundColor","darken","sidebarLower","marginTop","fullDisabled","opacity","symbolInput","lighten","color","symbolInputDisabled","iconButton","margin","iconButtonDisabled","trashButton","symbolRow","cursor","display","alignItems","border","minWidth","borderRadius","symbolRowDisabled","selectedSymbolRow","slider","maxWidth","marginLeft","sliderLabel","whiteSpace","buttonIcon","SetupBar","disabled","classes","dispatch","useDispatch","useState","setNote","allNotesSlice","useSelector","notesList","isValid","defaultBpm","React","useMemo","defaultMinutes","Paper","square","elevation","className","clsx","noValidate","autoComplete","onSubmit","event","preventDefault","Box","TextField","InputProps","root","id","variant","onChange","target","value","placeholder","IconButton","type","Add","fontSize","Typography","mt","flexWrap","map","item","onClick","e","stopPropagation","HighlightOff","toUpperCase","flex","m","Slider","onChangeCommitted","val","defaultValue","aria-labelledby","valueLabelDisplay","step","marks","min","max","VolumeUp","VolumeMute","playerStatusEnum","memo","scrollAreaWrapper","position","scrollArea","overflow","marginBottom","songContainer","left","inActiveBox","top","bottom","noteSize","right","width","marginRight","flexShrink","flexGrow","currentNote","countdown","dot","activeDot","justifyContent","NotesArray","notesToPlay","notesArray","key","setUpNotesToPlay","totalBeats","console","log","length","uniqueNotes","dividend","Math","floor","remainer","notesToPlayArray","Array","fill","flat","array","i","j","random","shuffleArray","NoteTray","playerStatus","songContainerRef","useRef","activeIndex","setActiveIndex","useSound","metronomeFile","volume","play","hasEnded","runInterval","PLAYING","callback","delay","savedCallback","useEffect","current","setInterval","func","clearInterval","useInterval","scrollTo","behavior","setTimeout","prev","ref","button","ControlBar","setPlayerStatus","ml","PAUSED","Pause","PlayArrow","STOPPED","Stop","App","navigator","wakeLock","request","smoothscroll","polyfill","Container","mb","Grid","container","xs","rootReducer","combineReducers","stockReducer","persistConfig","storage","persistedReducer","persistReducer","store","configureStore","reducer","persistor","persistStore","Boolean","window","location","hostname","match","createMuiTheme","palette","primary","main","secondary","error","red","A400","background","default","text","overrides","MuiPaper","ReactDOM","render","StrictMode","ThemeProvider","CssBaseline","loading","document","getElementById","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.f4f47df9.chunk.js","sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { RootState } from \"../store\";\r\n\r\ninterface NotesState {\r\n  list: string[];\r\n  bpm: number;\r\n  minutes: number;\r\n  metronome: boolean;\r\n}\r\n\r\nconst initialState: NotesState = {\r\n  list: [\"A\", \"D\", \"E\"],\r\n  bpm: 45,\r\n  minutes: 1,\r\n  metronome: false,\r\n};\r\n\r\nexport const stockSlice = createSlice({\r\n  name: \"notesSlice\",\r\n  initialState,\r\n  reducers: {\r\n    add: (state, action: PayloadAction<string>) => {\r\n      const note = action?.payload;\r\n      if (note && typeof note === \"string\") {\r\n        const index = state.list.indexOf(note);\r\n        if (index === -1) {\r\n          state.list.push(action.payload);\r\n        }\r\n      }\r\n    },\r\n    remove: (state, action: PayloadAction<string>) => {\r\n      const note = action?.payload;\r\n      if (note) {\r\n        const index = state.list.indexOf(note);\r\n        if (index !== -1) {\r\n          state.list.splice(index, 1);\r\n        }\r\n      }\r\n    },\r\n    setBPM: (state, action: PayloadAction<number>) => {\r\n      const bpm = action?.payload;\r\n      if (!bpm) {\r\n        state.bpm = 60;\r\n      }\r\n      if (bpm > 10 && bpm <= 150) {\r\n        state.bpm = bpm;\r\n      }\r\n    },\r\n    setMinutes: (state, action: PayloadAction<number>) => {\r\n      const minutes = action?.payload;\r\n      if (!minutes) {\r\n        state.minutes = 1;\r\n      }\r\n      if (minutes > 0 && minutes <= 5) {\r\n        state.minutes = minutes;\r\n      }\r\n    },\r\n    setMetronome: (state, action: PayloadAction<boolean>) => {\r\n      state.metronome = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  add,\r\n  remove,\r\n  setBPM,\r\n  setMinutes,\r\n  setMetronome,\r\n} = stockSlice.actions;\r\n\r\n// The function below is called a selector and allows us to select a value from\r\n// the state. Selectors can also be defined inline where they're used instead of\r\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\r\nexport const selectNotes = (state: RootState) => state.notes.list;\r\nexport const selectBPM = (state: RootState) => state.notes.bpm;\r\nexport const selectMinutes = (state: RootState) => state.notes.minutes;\r\nexport const selectMetronome = (state: RootState) => state.notes.metronome;\r\nexport const selectAllNotesSlice = (state: RootState) => state.notes;\r\n\r\n// TODO: fix naming\r\nexport default stockSlice.reducer;\r\n","export const powderBlue = \"#d6d9db\";\nexport const iceBlue = \"#f4f7f8\";\nexport const medLightGrey = \"#eaeced\";\nexport const white = \"#fff\";\nexport const slateGrey = \"#5b6770\";\nexport const darkGrey = \"hsla(217, 3%, 20%, 1)\";\nexport const darkTeal = \"hsla(180, 27%, 30%, 1)\";\nexport const darkBlue = \"hsla(217, 27%, 30%, 1)\";\n","import { darken, lighten, makeStyles } from \"@material-ui/core/styles\";\r\nimport { darkBlue } from \"../../lib/constants/colors\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  sidebar: {\r\n    transition: \"opacity .5s\",\r\n    padding: theme.spacing(2),\r\n    // borderRight: `2px solid ${darken(darkBlue, 0.4)}`,\r\n    backgroundColor: darken(darkBlue, 0.32),\r\n  },\r\n  sidebarLower: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  fullDisabled: {\r\n    opacity: 0.5,\r\n  },\r\n  symbolInput: {\r\n    backgroundColor: lighten(darkBlue, 0.6),\r\n    color: darken(darkBlue, 0.4),\r\n  },\r\n  symbolInputDisabled: {\r\n    backgroundColor: lighten(darkBlue, 0.2),\r\n  },\r\n  iconButton: {\r\n    margin: theme.spacing(0, 3),\r\n  },\r\n  iconButtonDisabled: {\r\n    opacity: 0.3,\r\n  },\r\n  trashButton: {\r\n    transition: \"opacity .5s\",\r\n    margin: theme.spacing(0, 1, 0, 0),\r\n    opacity: 0.5,\r\n    \"&:hover\": {\r\n      opacity: 1,\r\n    },\r\n  },\r\n  symbolRow: {\r\n    cursor: \"pointer\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    border: `1px solid ${lighten(darkBlue, 0.1)}`,\r\n    margin: theme.spacing(1),\r\n    minWidth: 100,\r\n    padding: theme.spacing(1, 2, 1, 0),\r\n    borderRadius: 6,\r\n    \"&:hover\": {\r\n      backgroundColor: darken(darkBlue, 0.38),\r\n    },\r\n  },\r\n  symbolRowDisabled: {\r\n    cursor: \"auto\",\r\n  },\r\n  selectedSymbolRow: {\r\n    backgroundColor: darken(darkBlue, 0.45),\r\n    \"&:hover\": {\r\n      backgroundColor: darken(darkBlue, 0.5),\r\n    },\r\n  },\r\n  slider: {\r\n    maxWidth: \"30rem\",\r\n    marginLeft: theme.spacing(3),\r\n  },\r\n  sliderLabel: {\r\n    whiteSpace: \"nowrap\",\r\n  },\r\n  buttonIcon: {\r\n    color: lighten(darkBlue, 0.6),\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import {\r\n  Box,\r\n  TextField,\r\n  Paper,\r\n  IconButton,\r\n  Typography,\r\n  Slider,\r\n} from \"@material-ui/core\";\r\nimport { Add, HighlightOff, VolumeMute, VolumeUp } from \"@material-ui/icons\";\r\nimport clsx from \"clsx\";\r\nimport React, {\r\n  ChangeEvent,\r\n  FormEvent,\r\n  MouseEvent,\r\n  useMemo,\r\n  useState,\r\n} from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  add,\r\n  remove,\r\n  selectAllNotesSlice,\r\n  setBPM,\r\n  setMinutes,\r\n  setMetronome,\r\n} from \"../../lib/redux/slices/stockSlice\";\r\nimport useStyles from \"./useStyles\";\r\n\r\nexport function SetupBar({ disabled }: { disabled: boolean }) {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const [note, setNote] = useState(\"\");\r\n  const allNotesSlice = useSelector(selectAllNotesSlice);\r\n  const { list: notesList, bpm = 60, minutes = 1, metronome } = allNotesSlice;\r\n\r\n  const isValid = !!note;\r\n\r\n  function onChange(\r\n    event: ChangeEvent<HTMLTextAreaElement | HTMLInputElement>\r\n  ) {\r\n    setNote(event?.target?.value);\r\n  }\r\n\r\n  function onSubmit(event: FormEvent<HTMLFormElement>) {\r\n    event.preventDefault();\r\n    dispatch(add(note));\r\n    setNote(\"\");\r\n  }\r\n\r\n  function removeNote(toRemove: string) {\r\n    dispatch(remove(toRemove));\r\n  }\r\n  function updateBpm(event: any, val: number | number[]) {\r\n    dispatch(setBPM(val as number));\r\n  }\r\n  function updateMinutes(event: any, val: number | number[]) {\r\n    dispatch(setMinutes(val as number));\r\n  }\r\n  function handleToggleAudio(event: any) {\r\n    dispatch(setMetronome(!metronome));\r\n  }\r\n  const defaultBpm = React.useMemo(() => bpm, []);\r\n  const defaultMinutes = React.useMemo(() => minutes, []);\r\n\r\n  return (\r\n    <>\r\n      <Paper\r\n        square\r\n        elevation={4}\r\n        className={clsx(classes.sidebar, disabled && classes.fullDisabled)}\r\n      >\r\n        <form noValidate autoComplete=\"off\" onSubmit={onSubmit}>\r\n          <Box display=\"flex\" alignItems=\"center\">\r\n            <TextField\r\n              InputProps={{\r\n                classes: {\r\n                  root: clsx(\r\n                    classes.symbolInput,\r\n                    disabled && classes.symbolInputDisabled\r\n                  ),\r\n                },\r\n              }}\r\n              disabled={disabled}\r\n              id=\"outlined-basic\"\r\n              variant=\"outlined\"\r\n              onChange={onChange}\r\n              value={note}\r\n              placeholder=\"Add chord\"\r\n            />\r\n            <IconButton\r\n              className={classes.iconButton}\r\n              classes={{ disabled: classes.iconButtonDisabled }}\r\n              disabled={!isValid}\r\n              type=\"submit\"\r\n            >\r\n              <Add color=\"primary\" fontSize=\"large\" />\r\n            </IconButton>\r\n            <Typography color={disabled ? \"secondary\" : \"primary\"}>\r\n              {disabled\r\n                ? \"Press stop to edit settings\"\r\n                : \"Add chords you'd like to practice. Hit start to begin practicing.\"}\r\n            </Typography>\r\n          </Box>\r\n        </form>\r\n\r\n        <Box mt={3} display=\"flex\" flexWrap=\"wrap\">\r\n          {notesList.map((item) => (\r\n            <Box\r\n              className={clsx(\r\n                classes.symbolRow,\r\n                disabled && classes.symbolRowDisabled\r\n              )}\r\n              key={item}\r\n            >\r\n              <IconButton\r\n                disabled={disabled}\r\n                className={clsx(\"trashButton\", classes.trashButton)}\r\n                onClick={(e: MouseEvent<any>) => {\r\n                  e.stopPropagation();\r\n                  removeNote(item);\r\n                }}\r\n              >\r\n                <HighlightOff color=\"primary\" fontSize=\"small\" />\r\n              </IconButton>\r\n\r\n              <Typography color=\"primary\">{item.toUpperCase()}</Typography>\r\n            </Box>\r\n          ))}\r\n        </Box>\r\n      </Paper>\r\n      <Paper\r\n        square\r\n        elevation={4}\r\n        className={clsx(\r\n          classes.sidebar,\r\n          classes.sidebarLower,\r\n          disabled && classes.fullDisabled\r\n        )}\r\n      >\r\n        <Box display=\"flex\" flex={1} alignItems=\"center\">\r\n          <Box display=\"flex\" flex={1} m={3}>\r\n            <Typography\r\n              id=\"bpm-slider\"\r\n              variant=\"body1\"\r\n              className={classes.sliderLabel}\r\n            >\r\n              Notes per minute:\r\n            </Typography>\r\n            {/* TODO: fix color of valuee */}\r\n            <Slider\r\n              classes={{ root: classes.slider }}\r\n              onChangeCommitted={updateBpm}\r\n              defaultValue={defaultBpm}\r\n              aria-labelledby=\"bpm-slider\"\r\n              valueLabelDisplay=\"auto\"\r\n              step={10}\r\n              disabled={disabled}\r\n              marks\r\n              min={20}\r\n              max={100}\r\n            />\r\n          </Box>\r\n          <Box display=\"flex\" flex={1} m={3}>\r\n            <Typography\r\n              id=\"minute-slider\"\r\n              variant=\"body1\"\r\n              className={classes.sliderLabel}\r\n            >\r\n              Practice length (minutes):\r\n            </Typography>\r\n            <Slider\r\n              classes={{ root: classes.slider }}\r\n              onChangeCommitted={updateMinutes}\r\n              defaultValue={defaultMinutes}\r\n              aria-labelledby=\"minute-slider\"\r\n              valueLabelDisplay=\"auto\"\r\n              step={0.5}\r\n              disabled={disabled}\r\n              marks\r\n              min={0.5}\r\n              max={5}\r\n            />\r\n          </Box>\r\n          <Box m={3} display=\"flex\" alignItems=\"center\">\r\n            <Typography variant=\"body1\" className={classes.sliderLabel}>\r\n              Metronome:\r\n            </Typography>\r\n            <IconButton onClick={handleToggleAudio}>\r\n              {metronome ? (\r\n                <VolumeUp className={classes.buttonIcon} />\r\n              ) : (\r\n                <VolumeMute className={classes.buttonIcon} />\r\n              )}\r\n            </IconButton>\r\n          </Box>\r\n        </Box>\r\n      </Paper>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default React.memo(SetupBar);\r\n","export type Nullable<T> = T | null;\n\n// TODO: rremovev old\nexport type DataPointType<T> = {\n  data: Nullable<T>;\n  error: any; // TODO: type\n  updatedAt: number;\n};\n\nexport type SymbolType = {\n  name: string;\n  data: {\n    quote: DataPointType<any>; //TODO: types\n    target: DataPointType<any>;\n    recommendations: DataPointType<any>;\n    financials: DataPointType<any>;\n    profile: DataPointType<any>;\n  };\n};\n\nexport enum playerStatusEnum {\n  PLAYING = \"playing\",\n  PAUSED = \"paused\",\n  STOPPED = \"stopped\",\n}\n\nexport type DataPointKeysType = keyof SymbolType[\"data\"];\n","import { darken, lighten, makeStyles } from \"@material-ui/core/styles\";\r\nimport { darkBlue } from \"../../lib/constants/colors\";\r\n\r\nexport const noteSize = 150;\r\nexport const noteSpacing = 50;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  scrollAreaWrapper: {\r\n    position: \"relative\",\r\n  },\r\n  scrollArea: {\r\n    display: \"flex\",\r\n    overflow: \"hidden\",\r\n    marginBottom: theme.spacing(42),\r\n  },\r\n  songContainer: {\r\n    position: \"relative\",\r\n    display: \"flex\",\r\n    flex: 1,\r\n    padding: theme.spacing(3),\r\n    left: -noteSpacing,\r\n  },\r\n  inActiveBox: {\r\n    position: \"absolute\",\r\n    backgroundColor: darken(darkBlue, 0.5),\r\n    opacity: 0.5,\r\n    top: 0,\r\n    bottom: 0,\r\n    left: noteSize + noteSpacing,\r\n    right: 0,\r\n  },\r\n  note: {\r\n    transition: \"border .5s, color .5s\",\r\n    padding: theme.spacing(3, 0),\r\n    width: noteSize,\r\n    marginLeft: noteSpacing,\r\n    marginRight: noteSpacing,\r\n    borderRadius: 6,\r\n    border: \"3px solid transparent\",\r\n    flexShrink: 0,\r\n    flexGrow: 0,\r\n    color: lighten(darkBlue, 0.3),\r\n    backgroundColor: darken(darkBlue, 0.1),\r\n  },\r\n  currentNote: {\r\n    border: `3px solid ${lighten(darkBlue, 0.5)}`,\r\n    color: lighten(darkBlue, 0.6),\r\n  },\r\n  countdown: {\r\n    opacity: 0.5,\r\n  },\r\n  dot: {\r\n    transition: \"background-color .5s\",\r\n    backgroundColor: lighten(darkBlue, 0.2),\r\n  },\r\n  activeDot: {\r\n    backgroundColor: lighten(darkBlue, 0.6),\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","export default __webpack_public_path__ + \"static/media/metronome.850b947b.wav\";","import { darken, lighten, makeStyles } from \"@material-ui/core/styles\";\r\nimport { darkBlue } from \"../../../lib/constants/colors\";\r\n\r\nexport const noteSize = 150;\r\nexport const noteSpacing = 50;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  note: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    transition: \"border .5s, color .5s\",\r\n    padding: theme.spacing(3, 0),\r\n    width: noteSize,\r\n    marginLeft: noteSpacing,\r\n    marginRight: noteSpacing,\r\n    borderRadius: 6,\r\n    border: \"3px solid transparent\",\r\n    flexShrink: 0,\r\n    flexGrow: 0,\r\n    color: lighten(darkBlue, 0.3),\r\n    backgroundColor: darken(darkBlue, 0.1),\r\n  },\r\n  countdown: {\r\n    opacity: 0.5,\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import { Typography } from \"@material-ui/core\";\nimport clsx from \"clsx\";\nimport React from \"react\";\nimport useStyles from \"./useStyles\";\n\nexport function NotesArray({ notesToPlay }: { notesToPlay: string[] }) {\n  const classes = useStyles();\n  const notesArray = notesToPlay.map((item: string, index: number) => {\n    const key = `${item}-${index}`;\n    return (\n      <div\n        key={key}\n        className={clsx(classes.note, index <= 3 && classes.countdown)}\n      >\n        <Typography color=\"inherit\" variant=\"h1\">\n          {item.toUpperCase()}\n        </Typography>\n      </div>\n    );\n  });\n  return <>{notesArray}</>;\n}\n\nexport default React.memo(NotesArray);\n","import { Box, Paper } from \"@material-ui/core\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport useSound from \"use-sound\";\r\nimport { selectAllNotesSlice } from \"../../lib/redux/slices/stockSlice\";\r\nimport useStyles, { noteSpacing, noteSize } from \"./useStyles\";\r\nimport metronomeFile from \"../../assets/metronome.wav\";\r\nimport { playerStatusEnum } from \"../../lib/constants/types\";\r\nimport { RootStateType } from \"../../lib/redux/rootReducer\";\r\nimport NotesArray from \"./notesMemoized\";\r\nimport useInterval from \"../../hooks/useInterval\";\r\n\r\n// TODO: move\r\nfunction shuffleArray(array: any[]) {\r\n  for (let i = array.length - 1; i > 0; i--) {\r\n    const j = Math.floor(Math.random() * (i + 1));\r\n    [array[i], array[j]] = [array[j], array[i]];\r\n  }\r\n}\r\n\r\nconst startingIndex = 0; // separate variable to ease manipulation for testing\r\n\r\nfunction setUpNotesToPlay(list: string[], totalBeats: number) {\r\n  console.log(\"setup\");\r\n  if (!list?.length || !totalBeats) {\r\n    return [];\r\n  }\r\n  const uniqueNotes = list.length;\r\n  const dividend = Math.floor(totalBeats / uniqueNotes);\r\n  const remainer = totalBeats % uniqueNotes;\r\n  const notesToPlayNestedArray = list.map((note: string, index: number) => {\r\n    const length = index === 0 ? dividend + remainer : dividend;\r\n    return new Array(length).fill(note);\r\n  });\r\n  const notesToPlayArray = notesToPlayNestedArray.flat();\r\n  shuffleArray(notesToPlayArray);\r\n  return [\"1\", \"2\", \"3\", \"4\", ...notesToPlayArray];\r\n}\r\n\r\nexport function NoteTray({ playerStatus }: { playerStatus: playerStatusEnum }) {\r\n  const classes = useStyles();\r\n  const { list, minutes, bpm, metronome }: RootStateType[\"notes\"] = useSelector(\r\n    selectAllNotesSlice\r\n  );\r\n  const songContainerRef = React.useRef(null);\r\n  const totalBeats = minutes * bpm;\r\n  const [activeIndex, setActiveIndex] = useState(startingIndex);\r\n  const [play] = useSound(metronomeFile, { volume: 1 });\r\n  const notesToPlay = React.useMemo(() => setUpNotesToPlay(list, totalBeats), [\r\n    list,\r\n    totalBeats,\r\n  ]);\r\n  const hasEnded = activeIndex >= notesToPlay.length - 1;\r\n  const runInterval = !hasEnded && playerStatus === playerStatusEnum.PLAYING;\r\n  const timing = (1000 * 60) / bpm;\r\n  const left = activeIndex * noteSpacing * 2 + activeIndex * noteSize;\r\n  useInterval(\r\n    () => {\r\n      if (\r\n        bpm &&\r\n        bpm < 500 &&\r\n        playerStatus === playerStatusEnum.PLAYING &&\r\n        !hasEnded\r\n      ) {\r\n        console.log(\"songContainerRef.current\", songContainerRef.current);\r\n        if (songContainerRef.current) {\r\n          console.log(\"scrroll\", { left });\r\n          (songContainerRef.current as any).scrollTo({\r\n            left,\r\n            behavior: \"smooth\",\r\n          });\r\n        }\r\n        if (metronome) {\r\n          setTimeout(function () {\r\n            play();\r\n          }, 100);\r\n        }\r\n        setActiveIndex((prev) => prev + 1);\r\n      }\r\n    },\r\n    runInterval ? timing : null\r\n  );\r\n\r\n  console.log(\"noteTray\", { notesToPlay: notesToPlay.length });\r\n  return (\r\n    <div className={classes.scrollAreaWrapper}>\r\n      <Paper\r\n        elevation={4}\r\n        className={classes.scrollArea}\r\n        ref={songContainerRef}\r\n      >\r\n        <div className={classes.songContainer}>\r\n          <NotesArray notesToPlay={notesToPlay} />\r\n        </div>\r\n      </Paper>\r\n\r\n      <div className={classes.inActiveBox} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo(NoteTray);\r\n","import React from \"react\";\nimport { Nullable } from \"../lib/constants/types\";\n\n// via https://overreacted.io/making-setinterval-declarative-with-react-hooks/\nexport default function useInterval(\n  callback: () => void,\n  delay: Nullable<number>\n) {\n  const savedCallback = React.useRef<any>(null);\n\n  // Remember the latest callback.\n  React.useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  React.useEffect(() => {\n    function tick() {\n      const func: () => void = savedCallback.current;\n      if (typeof func === \"function\") {\n        func();\n      }\n    }\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n}\n","import { darken, lighten, makeStyles } from \"@material-ui/core/styles\";\r\nimport { darkBlue } from \"../../lib/constants/colors\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    transition: \"border .2s, background-color .2s\",\r\n    border: `3px solid ${lighten(darkBlue, 0.2)}`,\r\n    backgroundColor: lighten(darkBlue, 0.1),\r\n    \"&:hover\": {\r\n      border: `3px solid ${lighten(darkBlue, 0.3)}`,\r\n      backgroundColor: lighten(darkBlue, 0.15),\r\n    },\r\n  },\r\n  buttonIcon: {\r\n    margin: theme.spacing(1),\r\n    color: lighten(darkBlue, 0.6),\r\n    fontSize: \"3rem\",\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import { Box, IconButton } from \"@material-ui/core\";\r\nimport { Pause, PlayArrow, Stop } from \"@material-ui/icons\";\r\nimport React from \"react\";\r\nimport { playerStatusEnum } from \"../../lib/constants/types\";\r\nimport useStyles from \"./useStyles\";\r\n\r\nexport function ControlBar({\r\n  setPlayerStatus,\r\n  playerStatus,\r\n}: {\r\n  playerStatus: playerStatusEnum;\r\n  setPlayerStatus: (status: playerStatusEnum) => void;\r\n}) {\r\n  const classes = useStyles();\r\n\r\n  function handleClickPlay(event: any) {\r\n    setPlayerStatus(playerStatusEnum.PLAYING);\r\n  }\r\n  function handleClickPause(event: any) {\r\n    setPlayerStatus(playerStatusEnum.PAUSED);\r\n  }\r\n  function handleClickStop(event: any) {\r\n    setPlayerStatus(playerStatusEnum.STOPPED);\r\n  }\r\n  return (\r\n    <Box display=\"flex\" flex={1} ml={3} alignItems=\"center\">\r\n      <Box m={3}>\r\n        <IconButton\r\n          onClick={\r\n            playerStatus === playerStatusEnum.PLAYING\r\n              ? handleClickPause\r\n              : handleClickPlay\r\n          }\r\n          className={classes.button}\r\n        >\r\n          {playerStatus === playerStatusEnum.PLAYING ? (\r\n            <Pause className={classes.buttonIcon} />\r\n          ) : (\r\n            <PlayArrow className={classes.buttonIcon} />\r\n          )}\r\n        </IconButton>\r\n      </Box>\r\n\r\n      <Box m={3}>\r\n        {playerStatus === playerStatusEnum.PAUSED && (\r\n          <IconButton onClick={handleClickStop} className={classes.button}>\r\n            <Stop className={classes.buttonIcon} />\r\n          </IconButton>\r\n        )}\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default React.memo(ControlBar);\r\n","import React, { useState } from \"react\";\r\nimport { Box, Grid, Container } from \"@material-ui/core\";\r\nimport smoothscroll from \"smoothscroll-polyfill\";\r\nimport SetupBar from \"./components/setupBar\";\r\nimport NoteTray from \"./components/noteTray\";\r\nimport { playerStatusEnum } from \"./lib/constants/types\";\r\nimport ControlBar from \"./components/controlBar\";\r\n\r\nfunction wakeLock() {\r\n  if (\"wakeLock\" in navigator) {\r\n    (navigator as any).wakeLock.request(\"screen\");\r\n  }\r\n}\r\n\r\nfunction App() {\r\n  React.useEffect(() => {\r\n    wakeLock();\r\n    smoothscroll.polyfill();\r\n  }, []);\r\n  const [playerStatus, setPlayerStatus] = useState<playerStatusEnum>(\r\n    playerStatusEnum.STOPPED\r\n  );\r\n  return (\r\n    <Container maxWidth=\"lg\">\r\n      <Box display=\"flex\" flex={1} mt={3} mb={3}>\r\n        {/* TODO: play pause, countdown */}\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12}>\r\n            <SetupBar disabled={playerStatus !== playerStatusEnum.STOPPED} />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <ControlBar\r\n              playerStatus={playerStatus}\r\n              setPlayerStatus={setPlayerStatus}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            {playerStatus !== playerStatusEnum.STOPPED && (\r\n              <NoteTray playerStatus={playerStatus} />\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n      <Box display=\"hidden\">Version: 1.0.03</Box>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { combineReducers } from \"@reduxjs/toolkit\";\nimport stockReducer from \"./slices/stockSlice\";\n\nconst rootReducer = combineReducers({\n  notes: stockReducer,\n});\n\nexport default rootReducer;\n\nexport type RootStateType = ReturnType<typeof rootReducer>;\n","import { configureStore, ThunkAction, Action } from \"@reduxjs/toolkit\";\r\nimport { persistStore, persistReducer } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\"; // defaults to localStorage for web\r\nimport rootReducer from \"./rootReducer\";\r\n\r\nconst persistConfig = {\r\n  key: \"root\",\r\n  storage,\r\n};\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nexport const store = configureStore({\r\n  reducer: persistedReducer,\r\n});\r\n\r\n// Handle rehydration for version updates?\r\nexport const persistor = persistStore(store);\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppThunk<ReturnType = void> = ThunkAction<\r\n  ReturnType,\r\n  RootState,\r\n  unknown,\r\n  Action<string>\r\n>;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { red } from \"@material-ui/core/colors\";\nimport { createMuiTheme, darken, lighten } from \"@material-ui/core/styles\";\nimport { darkBlue, darkTeal } from \"./lib/constants/colors\";\n\n// TODO: change default font color\n// A custom theme for this app\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: lighten(darkBlue, 0.6),\n    },\n    secondary: {\n      main: lighten(darkBlue, 0.3),\n    },\n    error: {\n      main: red.A400,\n    },\n    background: {\n      default: darken(darkBlue, 0.2),\n    },\n    text: {\n      primary: lighten(darkBlue, 0.5),\n    },\n  },\n  overrides: {\n    MuiPaper: {\n      root: {\n        backgroundColor: darkBlue,\n      },\n    },\n  },\n});\n\nexport default theme;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { PersistGate } from \"redux-persist/integration/react\";\r\nimport { ThemeProvider } from \"@material-ui/core/styles\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport \"fontsource-roboto\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { store, persistor } from \"./lib/redux/store\";\r\nimport { Provider } from \"react-redux\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport theme from \"./theme\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ThemeProvider theme={theme}>\r\n      {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\r\n      <CssBaseline />\r\n      <Provider store={store}>\r\n        <PersistGate loading={null} persistor={persistor}>\r\n          <App />\r\n        </PersistGate>\r\n      </Provider>\r\n    </ThemeProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}